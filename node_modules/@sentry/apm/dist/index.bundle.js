Object.defineProperty(exports, "__esModule", { value: true });
exports.addExtensionMethods = exports.Integrations = void 0;
var tslib_1 = require("tslib");
var types_1 = require("@sentry/types");
Object.defineProperty(exports, "Severity", { enumerable: true, get: function () { return types_1.Severity; } });
Object.defineProperty(exports, "Status", { enumerable: true, get: function () { return types_1.Status; } });
var browser_1 = require("@sentry/browser");
Object.defineProperty(exports, "addGlobalEventProcessor", { enumerable: true, get: function () { return browser_1.addGlobalEventProcessor; } });
Object.defineProperty(exports, "addBreadcrumb", { enumerable: true, get: function () { return browser_1.addBreadcrumb; } });
Object.defineProperty(exports, "captureException", { enumerable: true, get: function () { return browser_1.captureException; } });
Object.defineProperty(exports, "captureEvent", { enumerable: true, get: function () { return browser_1.captureEvent; } });
Object.defineProperty(exports, "captureMessage", { enumerable: true, get: function () { return browser_1.captureMessage; } });
Object.defineProperty(exports, "configureScope", { enumerable: true, get: function () { return browser_1.configureScope; } });
Object.defineProperty(exports, "getHubFromCarrier", { enumerable: true, get: function () { return browser_1.getHubFromCarrier; } });
Object.defineProperty(exports, "getCurrentHub", { enumerable: true, get: function () { return browser_1.getCurrentHub; } });
Object.defineProperty(exports, "Hub", { enumerable: true, get: function () { return browser_1.Hub; } });
Object.defineProperty(exports, "Scope", { enumerable: true, get: function () { return browser_1.Scope; } });
Object.defineProperty(exports, "setContext", { enumerable: true, get: function () { return browser_1.setContext; } });
Object.defineProperty(exports, "setExtra", { enumerable: true, get: function () { return browser_1.setExtra; } });
Object.defineProperty(exports, "setExtras", { enumerable: true, get: function () { return browser_1.setExtras; } });
Object.defineProperty(exports, "setTag", { enumerable: true, get: function () { return browser_1.setTag; } });
Object.defineProperty(exports, "setTags", { enumerable: true, get: function () { return browser_1.setTags; } });
Object.defineProperty(exports, "setUser", { enumerable: true, get: function () { return browser_1.setUser; } });
Object.defineProperty(exports, "startTransaction", { enumerable: true, get: function () { return browser_1.startTransaction; } });
Object.defineProperty(exports, "Transports", { enumerable: true, get: function () { return browser_1.Transports; } });
Object.defineProperty(exports, "withScope", { enumerable: true, get: function () { return browser_1.withScope; } });
var browser_2 = require("@sentry/browser");
Object.defineProperty(exports, "BrowserClient", { enumerable: true, get: function () { return browser_2.BrowserClient; } });
var browser_3 = require("@sentry/browser");
Object.defineProperty(exports, "defaultIntegrations", { enumerable: true, get: function () { return browser_3.defaultIntegrations; } });
Object.defineProperty(exports, "forceLoad", { enumerable: true, get: function () { return browser_3.forceLoad; } });
Object.defineProperty(exports, "init", { enumerable: true, get: function () { return browser_3.init; } });
Object.defineProperty(exports, "lastEventId", { enumerable: true, get: function () { return browser_3.lastEventId; } });
Object.defineProperty(exports, "onLoad", { enumerable: true, get: function () { return browser_3.onLoad; } });
Object.defineProperty(exports, "showReportDialog", { enumerable: true, get: function () { return browser_3.showReportDialog; } });
Object.defineProperty(exports, "flush", { enumerable: true, get: function () { return browser_3.flush; } });
Object.defineProperty(exports, "close", { enumerable: true, get: function () { return browser_3.close; } });
Object.defineProperty(exports, "wrap", { enumerable: true, get: function () { return browser_3.wrap; } });
var browser_4 = require("@sentry/browser");
Object.defineProperty(exports, "SDK_NAME", { enumerable: true, get: function () { return browser_4.SDK_NAME; } });
Object.defineProperty(exports, "SDK_VERSION", { enumerable: true, get: function () { return browser_4.SDK_VERSION; } });
var browser_5 = require("@sentry/browser");
var utils_1 = require("@sentry/utils");
var hubextensions_1 = require("./hubextensions");
Object.defineProperty(exports, "addExtensionMethods", { enumerable: true, get: function () { return hubextensions_1.addExtensionMethods; } });
var ApmIntegrations = require("./integrations");
var span_1 = require("./span");
Object.defineProperty(exports, "Span", { enumerable: true, get: function () { return span_1.Span; } });
Object.defineProperty(exports, "TRACEPARENT_REGEXP", { enumerable: true, get: function () { return span_1.TRACEPARENT_REGEXP; } });
var windowIntegrations = {};
// This block is needed to add compatibility with the integrations packages when used with a CDN
var _window = utils_1.getGlobalObject();
if (_window.Sentry && _window.Sentry.Integrations) {
    windowIntegrations = _window.Sentry.Integrations;
}
var INTEGRATIONS = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, windowIntegrations), browser_5.Integrations), { Tracing: ApmIntegrations.Tracing });
exports.Integrations = INTEGRATIONS;
// We are patching the global object with our hub extension methods
hubextensions_1.addExtensionMethods();
//# sourceMappingURL=index.bundle.js.map