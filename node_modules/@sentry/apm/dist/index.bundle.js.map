{"version":3,"file":"index.bundle.js","sourceRoot":"","sources":["../src/index.bundle.ts"],"names":[],"mappings":";;;AAAA,uCAauB;AANrB,iGAAA,QAAQ,OAAA;AAGR,+FAAA,MAAM,OAAA;AAKR,2CAoByB;AAnBvB,kHAAA,uBAAuB,OAAA;AACvB,wGAAA,aAAa,OAAA;AACb,2GAAA,gBAAgB,OAAA;AAChB,uGAAA,YAAY,OAAA;AACZ,yGAAA,cAAc,OAAA;AACd,yGAAA,cAAc,OAAA;AACd,4GAAA,iBAAiB,OAAA;AACjB,wGAAA,aAAa,OAAA;AACb,8FAAA,GAAG,OAAA;AACH,gGAAA,KAAK,OAAA;AACL,qGAAA,UAAU,OAAA;AACV,mGAAA,QAAQ,OAAA;AACR,oGAAA,SAAS,OAAA;AACT,iGAAA,MAAM,OAAA;AACN,kGAAA,OAAO,OAAA;AACP,kGAAA,OAAO,OAAA;AACP,2GAAA,gBAAgB,OAAA;AAChB,qGAAA,UAAU,OAAA;AACV,oGAAA,SAAS,OAAA;AAIX,2CAAqE;AAA5D,wGAAA,aAAa,OAAA;AACtB,2CAUyB;AATvB,8GAAA,mBAAmB,OAAA;AACnB,oGAAA,SAAS,OAAA;AACT,+FAAA,IAAI,OAAA;AACJ,sGAAA,WAAW,OAAA;AACX,iGAAA,MAAM,OAAA;AACN,2GAAA,gBAAgB,OAAA;AAChB,gGAAA,KAAK,OAAA;AACL,gGAAA,KAAK,OAAA;AACL,+FAAA,IAAI,OAAA;AAEN,2CAAwD;AAA/C,mGAAA,QAAQ,OAAA;AAAE,sGAAA,WAAW,OAAA;AAE9B,2CAAsE;AACtE,uCAAgD;AAEhD,iDAAsD;AAwB7C,oGAxBA,mCAAmB,OAwBA;AAvB5B,gDAAkD;AAElD,+BAAkD;AAAzC,4FAAA,IAAI,OAAA;AAAE,0GAAA,kBAAkB,OAAA;AAEjC,IAAI,kBAAkB,GAAG,EAAE,CAAC;AAE5B,gGAAgG;AAChG,IAAM,OAAO,GAAG,uBAAe,EAAU,CAAC;AAC1C,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE;IACjD,kBAAkB,GAAG,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC;CAClD;AAED,IAAM,YAAY,0DACb,kBAAkB,GAClB,sBAAmB,KACtB,OAAO,EAAE,eAAe,CAAC,OAAO,GACjC,CAAC;AAEuB,oCAAY;AAErC,mEAAmE;AACnE,mCAAmB,EAAE,CAAC","sourcesContent":["export {\n  Breadcrumb,\n  Request,\n  SdkInfo,\n  Event,\n  Exception,\n  Response,\n  Severity,\n  StackFrame,\n  Stacktrace,\n  Status,\n  Thread,\n  User,\n} from '@sentry/types';\n\nexport {\n  addGlobalEventProcessor,\n  addBreadcrumb,\n  captureException,\n  captureEvent,\n  captureMessage,\n  configureScope,\n  getHubFromCarrier,\n  getCurrentHub,\n  Hub,\n  Scope,\n  setContext,\n  setExtra,\n  setExtras,\n  setTag,\n  setTags,\n  setUser,\n  startTransaction,\n  Transports,\n  withScope,\n} from '@sentry/browser';\n\nexport { BrowserOptions } from '@sentry/browser';\nexport { BrowserClient, ReportDialogOptions } from '@sentry/browser';\nexport {\n  defaultIntegrations,\n  forceLoad,\n  init,\n  lastEventId,\n  onLoad,\n  showReportDialog,\n  flush,\n  close,\n  wrap,\n} from '@sentry/browser';\nexport { SDK_NAME, SDK_VERSION } from '@sentry/browser';\n\nimport { Integrations as BrowserIntegrations } from '@sentry/browser';\nimport { getGlobalObject } from '@sentry/utils';\n\nimport { addExtensionMethods } from './hubextensions';\nimport * as ApmIntegrations from './integrations';\n\nexport { Span, TRACEPARENT_REGEXP } from './span';\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\nconst _window = getGlobalObject<Window>();\nif (_window.Sentry && _window.Sentry.Integrations) {\n  windowIntegrations = _window.Sentry.Integrations;\n}\n\nconst INTEGRATIONS = {\n  ...windowIntegrations,\n  ...BrowserIntegrations,\n  Tracing: ApmIntegrations.Tracing,\n};\n\nexport { INTEGRATIONS as Integrations };\n\n// We are patching the global object with our hub extension methods\naddExtensionMethods();\n\nexport { addExtensionMethods };\n"]}